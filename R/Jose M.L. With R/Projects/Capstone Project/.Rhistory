numw(2,c(1,2,3))
numw <- function(num,v){
for (i in v){
if (i == num){
return(T)
}
}
return(F)
}
numw(2,c(1,2,3))
return(F)
numw <- function(num,v){
for (i in v){
if (i == num){
return(T)
}else{
return(F)
}
}
}
numw(2,c(1,2,3))
numw <- function(num,v){
for (i in v){
if (i == num){
print("I am False")
return(T)
}else{
print("I am False")
return(F)
}
}
}
numw(2,c(1,2,3))
numw <- function(num,v){
for (i in v){
if (i == num){
print('i am ',i)
}else{
print("Once more")
}
}
}
numw(2,c(1,2,3))
print(paste('i am ',i))
numw <- function(num,v){
for (i in v){
if (i == num){
print(paste('i am ',i))
}else{
print("Once more")
}
}
}
numw(2,c(1,2,3))
numw <- function(num,v){
for (i in v){
if (i == num){
return(T)
}
}
return(F)
}
numw(2,c(1,2,3))
# 4 -----------------------------------------------------------------------
nume <- function(num, v){
count <- 0
for (i in v){
if (i == num){
count <- count + 1
}
}
print(count)
}
nume(2, c(1,2,4,2,2,2,4,5,6,2,2,))
nume(2, c(1,2,4,2,2,2,4,5,6,2,2))
summer <- function(a,b,c){
out <- c(0)
if (a%%3 != 0){
out <- append(a, out)
}
if (b%%3 != 0){
out <- append(b, out)
}
if (c%%3 != 0){
out <- append(c, out)
}
print(sum(out))
}
summer(7,2,3)
prime_check <- function(num){
if (num == 2){
print(T)
}
for (x in 2:(num-1)){
if (num%%x == 0){
print(F)
}
}
print(T)
}
prime_check(7)
prime_check(11)
prime_check(9)
prime_check(9)
prime_check(2)
prime_check <- function(num){
if (num == 2){
return(T)
}
for (x in 2:(num-1)){
if (num%%x == 0){
return(F)
}
}
return(T)
}
prime_check(2)
prime_check(7)
prime_check(9)
if (num%%x == 0){
return(F)
print('I am in loop')
}
prime_check <- function(num){
if (num == 2){
return(T)
print('Loop avse')
}
for (x in 2:(num-1)){
if (num%%x == 0){
return(F)
print('I am in loop')
}
}
return(T)
print('I am outside the loop')
}
prime_check(9)
prime_check <- function(num){
if (num == 2){
print('Loop avse1')
return(T)
print('Loop avse2')
}
for (x in 2:(num-1)){
if (num%%x == 0){
print('I am in loop1')
return(F)
print('I am in loop2')
}
}
print('I am outside the loop1')
return(T)
print('I am outside the loop2')
}
prime_check(9)
prime_check <- function(num){
if (num == 2){
print('Loop avse1')
print(T)
print('Loop avse2')
}
for (x in 2:(num-1)){
if (num%%x == 0){
print('I am in loop1')
print(F)
print('I am in loop2')
}
}
print('I am outside the loop1')
print(T)
print('I am outside the loop2')
}
prime_check(9)
prime_check(45)
prime_check <- function(num){
if (num == 2){
return(T)
}
for (x in 2:(num-1)){
if (num%%x == 0){
return(F)
}
}
return(T)
}
prime_check(45)
seq(1, 100, by = 20)
seq(1, 101, by = 20)
seq(1, 10, by = 20)
seq(1, 100, by = 20)
seq(1, 100, by = 10)
seq(0, 100, by = 10)
v <- c(4,5,1,2,8,7,12,454)
sort(v)
rev(1:10)
str(1:10)
append(v, 1:10)
a <- append(v, 1:10)
a
is.vector(a)
as.list(v)
as.list(a)
sample(1,100,5)
sample(1,100,5)
sample(1:100,5)
sample(1:100,5)
sample(1:100,5)
sample(1:100,5)
sample(1:100,5)
addrand <- function(x){
ran <- sample(1:100, 1)
return(x+ran)
}
result <- lapply(v, addrand)
print(result)
v = 1:5
addrand <- function(x){
ran <- sample(1:100, 1)
return(x+ran)
}
result <- lapply(v, addrand)
print(result)
result <- sapply(v, addrand)
print(result)
? sapply
#Anonymous Function
v <- 1:5
sapply(v,function(x){x*2})
#Multiple Input
v = 1:5
and <- function(x, ran){
return(x+ran)
}
result <- sapply(v, and)
result <- sapply(v, and, ran = 10)
print(result)
v <- 'Hey its Manthan, The man who do not know introduction'
grep('not', v)
v
grepl('not', v)
v <- 'a', 'b', 'c', 'a'
v <- c('a', 'b', 'c', 'a')
grep('a', v)
grepl('a', v)
grep('a', v)
Sys.Date()
my_date <- as.Date("NOV-03-73", format = %y-%d-%b)
my_date <- as.Date("NOV-03-73", format = "%y-%d-%b")
my_date
my.date <- as.Date("NOV-03-73", format = "%y-%d-%b")
my.date
my.date <- as.Date("Nov-03-73", format = "%y-%d-%b")
my.date
my.date <- as.Date("Nov-03-73", format = "%b-%d-%y")
my.date
as.POSIXct("04:15:20", format = "%H:%M:%S")
? strptime()
install.packages("dplyr")
library(dplyr)
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
flights
a<- flights
View(a)
head(flights)
head(flights)
#Filter
filter(flights, month == 3, day == 11, carrier == 'AA')
#Filter
filter(flights, month == 3, day == 11, carrier == 'AA')
#Slice
slice(flights, 1:10)
head(flights)
#Arrange
arrange(flights, month, year, day, arr_time)
head(arrange(flights, month, year, day, desc(arr_time)))
#Select
head(select(flights, carrier))
#rename
head(rename(flights, mnt=month))
#Distinct
head(distinct(select(flights, arr_time)))
#mutate
head(mutate(flights, new_col = arr_delay - dep_delay))
#transmute
head(transmute(flights, new_col = arr_delay - dep_delay))
#summarise
summarise(flights, avg = mean(air_time, na.rm = T))
summarise(flights, total = sum(air_time, na.rm = T))
#sample_n   it will gives 10 rows randomly
sample_n(flights, 10)
#sample_n   it will gives 10 rows randomly
sample_n(flights, 10)
#sample_n   it will gives 10 rows randomly
sample_n(flights, 10)
#Slice
slice(flights, 1:10)
#Distinct
head(distinct(select(flights, arr_time)))
#mutate
head(mutate(flights, new_col = arr_delay - dep_delay))
#transmute
head(transmute(flights, new_col = arr_delay - dep_delay))
library(dplyr)
#pipe operator
df <- mtcars
arrange(sample_n(filter(df, mpg>20), size = 5), desc(mpg))
df %>% filter(mpg>20) %>% sample_n(size=5) %>% arrange(desc(mpg))
library(dplyr)
dfa <- head(mtcars)
filter(dfa, mpg>20, cylinder == 6)
str(dfa)
filter(dfa, mpg>20, cyl == 6)
dfa %>% arrange(cyl) %>% arrange(desc(wt))
dfa <- mtcars
dfa %>% arrange(cyl) %>% arrange(desc(wt))
dfa %>% arrange(cyl) %>% arrange(desc(wt)) %>% head()
head(arrange(mtcars, cyl, desc(wt)))
select(mtcars, mpg, hp)
head(select(mtcars, mpg, hp))
distinct(mtcars, gear)
mutate(mtcars, Performance = hp/wt)
mutate(head(mtcars), Performance = hp/wt)
transmute(mtcars, avg_mppg = mean(mpg))
summarise(mtcars, avg = mean(mpg))
head(mtcars) %>% select(cyl ==6)
head(mtcars) %>% select(cyl==6)
head(mtcars) %>% filter(cyl==6)
head(mtcars) %>% filter(cyl==6) %>% summarise(avg_hp = mean(hp))
library(tidyr)
library(data.table)
? runif()
?gather()
?rnorm
library(ggplot2)
install.packages("ggplot2movies")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2movies)
df <- ggplot(movies)
str(df)
df
summary(df)
colnames(movies)
head(movies)
print(p1 + geom_histogram())
p1 <- ggplot(movies, aes(x = rating))
print(p1 + geom_histogram())
print(p1 + geom_histogram(binwidth = 0.1))
print(p1 + geom_histogram(binwidth = 100))
print(p1 + geom_histogram(binwidth = 50))
print(p1 + geom_histogram(binwidth = 30))
print(p1 + geom_histogram(binwidth = 0.3))
print(p1 + geom_histogram(binwidth = 0.001))
print(p1 + geom_histogram(binwidth = 0.01))
print(p1 + geom_histogram(binwidth = 0.1))
print(p1 + geom_histogram(binwidth = 0.1, color = 'green'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'yellow'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'yellow', fill = 'yellow'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'yellow', fill = 'red'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'yellow', fill = 'green'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'pink', fill = 'green'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'pink', fill = 'pink'))
print(p1 + geom_histogram(binwidth = 0.1, color = 'pink', fill = 'pink', alpha = 0.4))
p2 <- p1 + geom_histogram(binwidth = 0.1, color = 'pink', fill = 'pink', alpha = 0.4)
p2 <- p1 + geom_histogram(binwidth = 0.1, color = 'pink', fill = 'pink', alpha = 0.4)
p3 <- p2 + xlab('Movies Ratings') + ylab('Count')
print(p3)
p3 <- p2 + xlab('Movies Ratings') + ylab('Count') + ggtitle('Movie Ratings By Manthan')
print(p3)
p2 <- p1 + geom_histogram(binwidth = 0.1, fill = ..count..)
p3 <- p2 + xlab('Movies Ratings') + ylab('Count') + ggtitle('Movie Ratings By Manthan')
print(p3)
p2 <- p1 + geom_histogram(binwidth = 0.1, aes(fill = ..count..))
p3 <- p2 + xlab('Movies Ratings') + ylab('Count') + ggtitle('Movie Ratings By Manthan')
print(p3)
colnames(movies)
movies
pl <- ggplot(movies, aes(x = votes)) %>%
geom_histogram(binwidth = 0.1, aes(fill = ..count..)) %>%
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl <- ggplot(movies, aes(x = votes)) +
geom_histogram(binwidth = 0.1, aes(fill = ..count..)) +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
p1
pl
pl3
pl <- ggplot(movies, aes(x = votes))
pl2 <- pl + geom_histogram(binwidth = 0.1, aes(fill = ..count..))
pl3 <- pl2 + xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl3
pl <- ggplot(movies, aes(x = votes)) +
geom_histogram(binwidth = 0.1, color = 'pink', fill = 'violet') +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
pl <- ggplot(movies, aes(x = rating)) +
geom_histogram(binwidth = 0.1, color = 'pink', fill = 'violet') +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
pl <- ggplot(movies, aes(x = rating)) +
geom_histogram(binwidth = 0.1, color = 'pink', fill = 'purple') +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
pl <- ggplot(movies, aes(x = rating)) +
geom_histogram(binwidth = 0.1, color = 'pink', aes(fill = ..count..)) +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
pl <- ggplot(movies, aes(x = rating)) +
geom_histogram(binwidth = 0.1, color = 'pink', aes(fill = ..count..)) +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
pl <- ggplot(movies, aes(x = rating)) +
geom_histogram(binwidth = 0.1, color = 'pink', aes(fill = ..count..), fill = 'pink') +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
pl <- ggplot(movies, aes(x = rating)) +
geom_histogram(binwidth = 0.1, color = 'pink', aes(fill = ..count..)) +
xlab('Votes') + ylab('Count') + ggtitle('Votings')
pl
library(ggplot2)
df <- mtcars
pl <- ggplot(df, aes(x = wt, y = mpg))
pl+ geom_point()
pl+ geom_point(aes(size= disp))
pl+ geom_point(aes(size= cyl))
pl+ geom_point(aes(size= wt))
pl+ geom_point(aes(size= gear))
pl+ geom_point(aes(size= qsec))
pl+ geom_point(aes(size= vs))
pl+ geom_point(aes(size= factor(cyl)))
pl+ geom_point(aes(shape = factor(cyl)))
pl+ geom_point(aes(shape = factor(cyl)), size = 5)
pl+ geom_point(aes(shape = factor(cyl)), size = 2)
pl+ geom_point(aes(shape = factor(cyl)), size = 5)
pl+ geom_point(aes(shape = factor(cyl)), size = 5, alpha = 0.4)
pl+ geom_point(aes(shape = factor(cyl), color = factor(cyl)), size = 5, alpha = 0.4)
pl+ geom_point(aes(color = hp), size = 5)
pl+ geom_point(aes(color = hp), size = 5) + scale_color_gradient(low = 'red', high = 'purple')
install.packages("plotly")
library(ggplot2)
library(plotly)
ggplot(mtcars, aes(mpg, wt)) + geom_point() + ggplotly()
ggplot(mtcars, aes(mpg, wt))
ggplot(mtcars, aes(mpg, wt)) + geom_point()
ggplot(mtcars, aes(mpg, wt)) + geom_point() + ggplotly()
ggplotly(ggplot(mtcars, aes(mpg, wt)) + geom_point())
setwd("F:/Programs/R/Jose M.L. With R/Projects/Capstone Project")
library(ggplot2)
library(dplyr)
batting <- read.csv("Batting.csv")
sal <- read.csv("Salaries.csv")
batting$BA <- batting$H / batting$AB
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$BB + batting$HBP + batting$SF + batting$AB)
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
batting$SLG <- ((batting$X1B) + (2 * batting$X2B) + (3 * batting$X3B) + (4 * batting$HR)) / (batting$AB)
batting <- subset(batting, yearID >=1985)
combo <- merge(batting, sal, by=c('playerID', 'yearID'))
lost_players <- subset(combo, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
lost_players <- subset(lost_players, yearID == 2001)
lost_players <- lost_players[, c('playerID','H','X2B','X3B','HR','OBP','SLG','BA','AB')]
combo <- subset(combo, yearID == 2001)
ggplot(combo, aes(OBP, salary)) +
geom_point(size = 2)
combo <- subset(combo, salary < 8000000 & OBP > 0)
combo <- subset(combo, AB >= 450)
option <- head(arrange(combo, desc(OBP)), 10)
option[, c('playerID', 'OBP', 'AB', 'salary')]
lost_players <- lost_players[, c('playerID','H','X2B','X3B','HR','OBP','SLG','BA','AB', 'salary')]
str(lost_players)
lost_players <- subset(combo, playerID %in% c('giambja01', 'damonjo01', 'saenzol01'))
lost_players <- subset(lost_players, yearID == 2001)
str(lost_players)
lost_players$salary
lost_players$AB
option[, c('playerID', 'OBP', 'AB', 'salary')]
option <- head(arrange(combo, desc(OBP)), 10)
option[, c('playerID', 'OBP', 'AB', 'salary')]
option <- head(arrange(combo, desc(OBP)))
option[, c('playerID', 'OBP', 'AB', 'salary')]
lost_players <- lost_players[, c('playerID','H','X2B','X3B','HR','OBP','SLG','BA','AB', 'salary')]
lost_players
library(dplyr)
library(nycflights13)
head(flights)
#Filter
filter(flights, month == 3, day == 11, carrier == 'AA')
#Slice
slice(flights, 1:10)
#Arrange
arrange(flights, month, year, day, arr_time)
head(arrange(flights, month, year, day, desc(arr_time)))
#Select
head(select(flights, carrier))
#rename
head(rename(flights, mnt=month))
#Distinct
head(distinct(select(flights, arr_time)))
#mutate
head(mutate(flights, new_col = arr_delay - dep_delay))
#transmute
head(transmute(flights, new_col = arr_delay - dep_delay))
#summarise
summarise(flights, avg = mean(air_time, na.rm = T))
summarise(flights, total = sum(air_time, na.rm = T))
#sample_n   it will gives 10 rows randomly
sample_n(flights, 10)
#pipe operator
df <- mtcars
arrange(sample_n(filter(df, mpg>20), size = 5), desc(mpg))
df %>% filter(mpg>20) %>% sample_n(size=5) %>% arrange(desc(mpg))
